/*
 * StatsAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package org.dcsa.api.stats.exceptions;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.coreinterfaces.http.Context;
import java.time.LocalDateTime;
import java.util.List;
import org.dcsa.api.stats.DateTimeHelper;
import org.dcsa.api.stats.models.Error;
import org.dcsa.api.stats.models.HttpMethodEnum;

/**
 * This is a model class for ErrorResponseException type.
 */
public class ErrorResponseException extends ApiException {
    private static final long serialVersionUID = -3948868105011290427L;
    private HttpMethodEnum httpMethod;
    private String requestUri;
    private int statusCode;
    private String statusCodeText;
    private String statusCodeMessage;
    private String providerCorrelationReference;
    private LocalDateTime errorDateTime;
    private List<Error> errors;

    /**
     * Initialization constructor.
     * @param   reason  The reason for throwing exception
     * @param   context The context of the API exception
     */
    public ErrorResponseException(String reason, Context context) {
        super(reason, context);
    }


    /**
     * Getter for HttpMethod.
     * The HTTP method used to make the request e.g. `GET`, `POST`, etc
     * @return Returns the HttpMethodEnum
     */
    @JsonGetter("httpMethod")
    public HttpMethodEnum getHttpMethod() {
        return this.httpMethod;
    }

    /**
     * Setter for HttpMethod.
     * The HTTP method used to make the request e.g. `GET`, `POST`, etc
     * @param httpMethod Value for HttpMethodEnum
     */
    @JsonSetter("httpMethod")
    private void setHttpMethod(HttpMethodEnum httpMethod) {
        this.httpMethod = httpMethod;
    }

    /**
     * Getter for RequestUri.
     * The URI that was requested.
     * @return Returns the String
     */
    @JsonGetter("requestUri")
    public String getRequestUri() {
        return this.requestUri;
    }

    /**
     * Setter for RequestUri.
     * The URI that was requested.
     * @param requestUri Value for String
     */
    @JsonSetter("requestUri")
    private void setRequestUri(String requestUri) {
        this.requestUri = requestUri;
    }

    /**
     * Getter for StatusCode.
     * The HTTP status code returned.
     * @return Returns the int
     */
    @JsonGetter("statusCode")
    public int getStatusCode() {
        return this.statusCode;
    }

    /**
     * Setter for StatusCode.
     * The HTTP status code returned.
     * @param statusCode Value for int
     */
    @JsonSetter("statusCode")
    private void setStatusCode(int statusCode) {
        this.statusCode = statusCode;
    }

    /**
     * Getter for StatusCodeText.
     * A standard short description corresponding to the HTTP status code.
     * @return Returns the String
     */
    @JsonGetter("statusCodeText")
    public String getStatusCodeText() {
        return this.statusCodeText;
    }

    /**
     * Setter for StatusCodeText.
     * A standard short description corresponding to the HTTP status code.
     * @param statusCodeText Value for String
     */
    @JsonSetter("statusCodeText")
    private void setStatusCodeText(String statusCodeText) {
        this.statusCodeText = statusCodeText;
    }

    /**
     * Getter for StatusCodeMessage.
     * A long description corresponding to the HTTP status code with additional information.
     * @return Returns the String
     */
    @JsonGetter("statusCodeMessage")
    public String getStatusCodeMessage() {
        return this.statusCodeMessage;
    }

    /**
     * Setter for StatusCodeMessage.
     * A long description corresponding to the HTTP status code with additional information.
     * @param statusCodeMessage Value for String
     */
    @JsonSetter("statusCodeMessage")
    private void setStatusCodeMessage(String statusCodeMessage) {
        this.statusCodeMessage = statusCodeMessage;
    }

    /**
     * Getter for ProviderCorrelationReference.
     * A unique identifier to the HTTP request within the scope of the API provider.
     * @return Returns the String
     */
    @JsonGetter("providerCorrelationReference")
    public String getProviderCorrelationReference() {
        return this.providerCorrelationReference;
    }

    /**
     * Setter for ProviderCorrelationReference.
     * A unique identifier to the HTTP request within the scope of the API provider.
     * @param providerCorrelationReference Value for String
     */
    @JsonSetter("providerCorrelationReference")
    private void setProviderCorrelationReference(String providerCorrelationReference) {
        this.providerCorrelationReference = providerCorrelationReference;
    }

    /**
     * Getter for ErrorDateTime.
     * The DateTime corresponding to the error occuring. Must be formatted using [ISO
     * 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("errorDateTime")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getErrorDateTime() {
        return this.errorDateTime;
    }

    /**
     * Setter for ErrorDateTime.
     * The DateTime corresponding to the error occuring. Must be formatted using [ISO
     * 8601](https://en.wikipedia.org/wiki/ISO_8601) format.
     * @param errorDateTime Value for LocalDateTime
     */
    @JsonSetter("errorDateTime")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    private void setErrorDateTime(LocalDateTime errorDateTime) {
        this.errorDateTime = errorDateTime;
    }

    /**
     * Getter for Errors.
     * List of detailed errors, e.g. fields that could not pass validation
     * @return Returns the List of Error
     */
    @JsonGetter("errors")
    public List<Error> getErrors() {
        return this.errors;
    }

    /**
     * Setter for Errors.
     * List of detailed errors, e.g. fields that could not pass validation
     * @param errors Value for List of Error
     */
    @JsonSetter("errors")
    private void setErrors(List<Error> errors) {
        this.errors = errors;
    }
}
