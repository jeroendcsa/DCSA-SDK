/*
 * StatsAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package org.dcsa.api.stats.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for V1StatsRequest type.
 */
public class V1StatsRequest {
    private DomainEnum domain;
    private MethodEnum method;
    private String path;
    private String version;
    private List<String> params;
    private String uniqueAdopterHash;

    /**
     * Default constructor.
     */
    public V1StatsRequest() {
    }

    /**
     * Initialization constructor.
     * @param  domain  DomainEnum value for domain.
     * @param  method  MethodEnum value for method.
     * @param  path  String value for path.
     * @param  version  String value for version.
     * @param  params  List of String value for params.
     * @param  uniqueAdopterHash  String value for uniqueAdopterHash.
     */
    public V1StatsRequest(
            DomainEnum domain,
            MethodEnum method,
            String path,
            String version,
            List<String> params,
            String uniqueAdopterHash) {
        this.domain = domain;
        this.method = method;
        this.path = path;
        this.version = version;
        this.params = params;
        this.uniqueAdopterHash = uniqueAdopterHash;
    }

    /**
     * Getter for Domain.
     * The DCSA standard being referred. - `TNT` (Track and Trace) - `TNT_NTF` (Track and Trace
     * Notifications) - `OVS` (Operational Vessel Schedules) - `EBL` (Electronic Bill of Lading) -
     * `EBL_NTF` (Electronic Bill of Lading Notifications) - `EBL_SUR` (Electronic Bill of Lading
     * Surrender) - `EBL_SUR_RSP` (Electronic Bill of Lading Surrender Response) - `EBL_ISS`
     * (Electronic Bill of Lading Issuance) - `EBL_ISS_RSP` (Electronic Bill of Lading Issuance
     * Response) - `BKG` (Booking) - `BKG_NTF` (Booking Notifications) - `CBF` (Consolidated Booking
     * Forecast) - `JIT` (Just In Time Portcall) - `CS` (Commercial Schedules) - `AN` (Arrival
     * Notice) - `AN_NTF` (Arrival Notice Notifications) - `DI` (Delivery Instruction) - `DI_NTF`
     * (Delivery Instruction Notifications) - `RMC` (Reefer Monitoring Commercial) - `RMC_NTF`
     * (Reefer Monitoring Commercial Notifications) - `RMO` (Operational Reefer Monitoring) -
     * `RMO_NTF` (Operational Reefer Monitoring Notifications) - `IC` (IoT Commercial) - `IC_NTF`
     * (IoT Commercial Notifications) - `IO` (IoT Operations) - `IO_NTF` (IoT Operations
     * Notifications) - `DO` (Delivery Order) - `DO_NTF` (Delivery Order Notifications) - `TO`
     * (Transport Order) - `TO_NTF` (Transport Order Notifications) - `CRO` (Container Release
     * Order) - `CRO_NTF` (Container Release Order Notifications)
     * @return Returns the DomainEnum
     */
    @JsonGetter("domain")
    public DomainEnum getDomain() {
        return domain;
    }

    /**
     * Setter for Domain.
     * The DCSA standard being referred. - `TNT` (Track and Trace) - `TNT_NTF` (Track and Trace
     * Notifications) - `OVS` (Operational Vessel Schedules) - `EBL` (Electronic Bill of Lading) -
     * `EBL_NTF` (Electronic Bill of Lading Notifications) - `EBL_SUR` (Electronic Bill of Lading
     * Surrender) - `EBL_SUR_RSP` (Electronic Bill of Lading Surrender Response) - `EBL_ISS`
     * (Electronic Bill of Lading Issuance) - `EBL_ISS_RSP` (Electronic Bill of Lading Issuance
     * Response) - `BKG` (Booking) - `BKG_NTF` (Booking Notifications) - `CBF` (Consolidated Booking
     * Forecast) - `JIT` (Just In Time Portcall) - `CS` (Commercial Schedules) - `AN` (Arrival
     * Notice) - `AN_NTF` (Arrival Notice Notifications) - `DI` (Delivery Instruction) - `DI_NTF`
     * (Delivery Instruction Notifications) - `RMC` (Reefer Monitoring Commercial) - `RMC_NTF`
     * (Reefer Monitoring Commercial Notifications) - `RMO` (Operational Reefer Monitoring) -
     * `RMO_NTF` (Operational Reefer Monitoring Notifications) - `IC` (IoT Commercial) - `IC_NTF`
     * (IoT Commercial Notifications) - `IO` (IoT Operations) - `IO_NTF` (IoT Operations
     * Notifications) - `DO` (Delivery Order) - `DO_NTF` (Delivery Order Notifications) - `TO`
     * (Transport Order) - `TO_NTF` (Transport Order Notifications) - `CRO` (Container Release
     * Order) - `CRO_NTF` (Container Release Order Notifications)
     * @param domain Value for DomainEnum
     */
    @JsonSetter("domain")
    public void setDomain(DomainEnum domain) {
        this.domain = domain;
    }

    /**
     * Getter for Method.
     * The HTTP Method used in the referenced API call.
     * @return Returns the MethodEnum
     */
    @JsonGetter("method")
    public MethodEnum getMethod() {
        return method;
    }

    /**
     * Setter for Method.
     * The HTTP Method used in the referenced API call.
     * @param method Value for MethodEnum
     */
    @JsonSetter("method")
    public void setMethod(MethodEnum method) {
        this.method = method;
    }

    /**
     * Getter for Path.
     * The context path of the reference API call.
     * @return Returns the String
     */
    @JsonGetter("path")
    public String getPath() {
        return path;
    }

    /**
     * Setter for Path.
     * The context path of the reference API call.
     * @param path Value for String
     */
    @JsonSetter("path")
    public void setPath(String path) {
        this.path = path;
    }

    /**
     * Getter for Version.
     * DCSA version of the API being used.
     * @return Returns the String
     */
    @JsonGetter("version")
    public String getVersion() {
        return version;
    }

    /**
     * Setter for Version.
     * DCSA version of the API being used.
     * @param version Value for String
     */
    @JsonSetter("version")
    public void setVersion(String version) {
        this.version = version;
    }

    /**
     * Getter for Params.
     * The request parameters being used.
     * @return Returns the List of String
     */
    @JsonGetter("params")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getParams() {
        return params;
    }

    /**
     * Setter for Params.
     * The request parameters being used.
     * @param params Value for List of String
     */
    @JsonSetter("params")
    public void setParams(List<String> params) {
        this.params = params;
    }

    /**
     * Getter for UniqueAdopterHash.
     * SHA-256 of the adopter. &gt; *Rules to be defined.*
     * @return Returns the String
     */
    @JsonGetter("uniqueAdopterHash")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getUniqueAdopterHash() {
        return uniqueAdopterHash;
    }

    /**
     * Setter for UniqueAdopterHash.
     * SHA-256 of the adopter. &gt; *Rules to be defined.*
     * @param uniqueAdopterHash Value for String
     */
    @JsonSetter("uniqueAdopterHash")
    public void setUniqueAdopterHash(String uniqueAdopterHash) {
        this.uniqueAdopterHash = uniqueAdopterHash;
    }

    /**
     * Converts this V1StatsRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "V1StatsRequest [" + "domain=" + domain + ", method=" + method + ", path=" + path
                + ", version=" + version + ", params=" + params + ", uniqueAdopterHash="
                + uniqueAdopterHash + "]";
    }

    /**
     * Builds a new {@link V1StatsRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link V1StatsRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(domain, method, path, version)
                .params(getParams())
                .uniqueAdopterHash(getUniqueAdopterHash());
        return builder;
    }

    /**
     * Class to build instances of {@link V1StatsRequest}.
     */
    public static class Builder {
        private DomainEnum domain;
        private MethodEnum method;
        private String path;
        private String version;
        private List<String> params;
        private String uniqueAdopterHash;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  domain  DomainEnum value for domain.
         * @param  method  MethodEnum value for method.
         * @param  path  String value for path.
         * @param  version  String value for version.
         */
        public Builder(DomainEnum domain, MethodEnum method, String path, String version) {
            this.domain = domain;
            this.method = method;
            this.path = path;
            this.version = version;
        }

        /**
         * Setter for domain.
         * @param  domain  DomainEnum value for domain.
         * @return Builder
         */
        public Builder domain(DomainEnum domain) {
            this.domain = domain;
            return this;
        }

        /**
         * Setter for method.
         * @param  method  MethodEnum value for method.
         * @return Builder
         */
        public Builder method(MethodEnum method) {
            this.method = method;
            return this;
        }

        /**
         * Setter for path.
         * @param  path  String value for path.
         * @return Builder
         */
        public Builder path(String path) {
            this.path = path;
            return this;
        }

        /**
         * Setter for version.
         * @param  version  String value for version.
         * @return Builder
         */
        public Builder version(String version) {
            this.version = version;
            return this;
        }

        /**
         * Setter for params.
         * @param  params  List of String value for params.
         * @return Builder
         */
        public Builder params(List<String> params) {
            this.params = params;
            return this;
        }

        /**
         * Setter for uniqueAdopterHash.
         * @param  uniqueAdopterHash  String value for uniqueAdopterHash.
         * @return Builder
         */
        public Builder uniqueAdopterHash(String uniqueAdopterHash) {
            this.uniqueAdopterHash = uniqueAdopterHash;
            return this;
        }

        /**
         * Builds a new {@link V1StatsRequest} object using the set fields.
         * @return {@link V1StatsRequest}
         */
        public V1StatsRequest build() {
            return new V1StatsRequest(domain, method, path, version, params, uniqueAdopterHash);
        }
    }
}
